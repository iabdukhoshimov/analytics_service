image: docker:19.03.12

services:
  - docker:19.03.12-dind

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  cache:
    paths:
      - .go/pkg/mod/

before_script:
  - docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD
  - apk update && apk --no-cache --update add make

stages:
  - build
  - migrate
  - deploy

build-image:
  stage: build
  script:
    - IMAGE_TAG=$CI_PIPELINE_IID make image_build
    - IMAGE_TAG=$CI_PIPELINE_IID make tag_image
    - IMAGE_TAG=$CI_PIPELINE_IID make push_image
  only:
    - main
  tags:
    - build

migrate_prod:
  stage: migrate
  before_script:
    - apk add wget && wget https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz
    - tar -xvf migrate.linux-amd64.tar.gz && mv migrate.linux-amd64 migrate && chmod +x migrate
  script:
    - ./migrate -path $PWD/migrations -database ${PSQL_URI} -verbose up
  only:
    - main
  tags:
    - migrate

deploy-prod:
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$GITLAB_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - echo '$CI_REGISTRY'/'$CI_PROJECT_NAMESPACE'/'$CI_PROJECT_NAME':'$CI_PIPELINE_IID'
    - echo $USER@$HOST
    - ssh -o StrictHostKeyChecking=no $USER@$HOST 'docker service update --with-registry-auth
      --image '$CI_REGISTRY'/'$CI_PROJECT_NAMESPACE'/'$CI_PROJECT_NAME':'$CI_PIPELINE_IID' greatsoft_service_back-end'
  only:
    - main
  tags:
    - deploy
