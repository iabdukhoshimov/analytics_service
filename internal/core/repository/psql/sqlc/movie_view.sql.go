// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: movie_view.sql

package sqlc

import (
	"context"
)

const selectAllMovies = `-- name: SelectAllMovies :many
SELECT id, ip_address, user_id, movie_slug, owner_id, season_number, episode_number, viewed_at, created_at, active, source_place, audio_lang, subtitle_lang, country, region, platform, city, lon, lat, category FROM movie_view
`

func (q *Queries) SelectAllMovies(ctx context.Context) ([]MovieView, error) {
	rows, err := q.db.Query(ctx, selectAllMovies)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []MovieView
	for rows.Next() {
		var i MovieView
		if err := rows.Scan(
			&i.ID,
			&i.IpAddress,
			&i.UserID,
			&i.MovieSlug,
			&i.OwnerID,
			&i.SeasonNumber,
			&i.EpisodeNumber,
			&i.ViewedAt,
			&i.CreatedAt,
			&i.Active,
			&i.SourcePlace,
			&i.AudioLang,
			&i.SubtitleLang,
			&i.Country,
			&i.Region,
			&i.Platform,
			&i.City,
			&i.Lon,
			&i.Lat,
			&i.Category,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
